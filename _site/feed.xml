<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cats on Code</title>
    <description>The cattiest web development blog on the interwebz.  
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 16 Aug 2020 17:37:21 -0700</pubDate>
    <lastBuildDate>Sun, 16 Aug 2020 17:37:21 -0700</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>React Essentials Part 2: Data</title>
        <description>&lt;p&gt;&lt;em&gt;
This part two of a series touching on essential parts of React.js to known when getting started. This will cover making components, handling data, component lifecycle, and using modern best practices to do so. Comfort with using terminal, Git, Github, HTML and JavaScript are recommended. Start with the &lt;a href=&quot;/react-components&quot; alt=&quot;first part of series, getting started with components&quot;&gt;first part&lt;/a&gt; of the series. If you get stuck, use this &lt;a alt=&quot;Tutorial's github repository&quot; target=&quot;_blank&quot; href=&quot;https://github.com/PilgrimMemoirs/essential-react-tutorial&quot;&gt;repository&lt;/a&gt;, the branch titled 'data' will have the final solution for this part of the series.
&lt;br /&gt;&lt;br /&gt;
In the last post you should have set up the project along with 3 components (Park, Trail, and Review). This post is going to focus on delegating data to the appropriate component, and then having that component handle displaying the data.
&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Setting up a component to handle data&lt;/h2&gt;

&lt;p&gt;
 In App.js, on line 9, add a name attribute to the Park component, with the name of the park you want that component to render, like so: &lt;code&gt;&amp;lt;Park name=&quot;Yellowstone&quot;/&amp;gt;’&lt;/code&gt;. This how to pass data we want that specific component to handle.
&lt;/p&gt;

&lt;p&gt;
To display the name of this park we go into Park.js. On line 5, put ‘{name}’ in as the parameter of the component, to look like this&lt;code&gt;function Park({name}) {&lt;/code&gt;. The argument must have the same name as the attribute when rendering the component (like we did in App.js).
&lt;/p&gt;

&lt;p&gt;
Now we can update the JSX to look like &lt;code&gt;&amp;lt;h1&amp;gt;I'm { name } park!&amp;lt;/h1&amp;gt;&lt;/code&gt;. In JSX, when you want to use JavaScript it needs to be wrapped by curly braces. After you save, the page should refresh to show &quot;I'm Yellowstone park!&quot;!
&lt;/p&gt;

&lt;p&gt;
What should we do if we also wanted to display Central Park and Stanley Park? Try it out and, afterwards, you can compare your code with this &lt;a href=&quot;&quot; alt=&quot;sample solution for setting up a component to render data&quot;&gt;sample solution&lt;/a&gt;!
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;Passing data between components&lt;/h2&gt;

&lt;p&gt;
When setting up components, it’s good to be mindful of the relationship between the components and which ones will render other components. That’s because, when it comes to handling data, it is best to pass information from the top-most components down to the components they render.
&lt;/p&gt;

&lt;p&gt;
With this app, Trails belong to Parks. So we can pass data from a Park component to any of that Park’s trails. In App.js, add a trail attribute to Yellowstone Park component, like so: &lt;code&gt;trail=&quot;Mammoth Hot Springs&quot;&lt;/code&gt;. In Park.js, update the arguments to include 'trail', like so: &lt;code&gt;{name, trail}&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
This doesn’t change anything yet, that’s because the name of this trail needs to get passed down to Trail component, where we want it render. In Park.js, add a name attribute to Trail and pass the name of the trail variable to it, like so: &lt;code&gt;&amp;lt;Trail name={ trail }/&amp;gt;&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
So, this name of this trail has gone by two different names as it has been passed. First it was set to trail, as it was passed to Park. Then, it was passed on to the Trail component as ‘name’.
&lt;/p&gt;

&lt;p&gt;
Finally, to get the name to render, go to Trail.js and modify the h2 element to display the name, like so: &lt;code&gt;&amp;lt;h2&amp;gt;I'm { name } trail!&amp;lt;/h2&amp;gt;&lt;/code&gt;
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/react-data.png&quot; alt=&quot;screenshot of code editor with current state of App.js, Park.js and Trail.js&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;
Data was just passed all the way from App.js to Park.js, then down to Trail.js!
&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Aug 2020 05:00:00 -0700</pubDate>
        <link>http://localhost:4000/react-components2</link>
        <guid isPermaLink="true">http://localhost:4000/react-components2</guid>
        
        <category>javascript</category>
        
        <category>web</category>
        
        <category>frontend</category>
        
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>React Essentials Part 1: Components</title>
        <description>&lt;p&gt;&lt;em&gt;
This is the first post in a series touching on essential parts of React.js to know when getting started. The series will cover making components, handling data, component lifecycle, and using modern best practices to do so. Comfort with using terminal, Git, Github, HTML and JavaScript are recommended.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;The Project&lt;/h2&gt;
&lt;p&gt;
We will be building the front-end for an app that lets users view information about parks, and the trails inside each park. Users can also leave reviews for parks and trails.
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;
Use this &lt;a alt=&quot;Tutorial's github repository&quot; target=&quot;_blank&quot; href=&quot;https://github.com/PilgrimMemoirs/essential-react-tutorial&quot;&gt;GitHub repository&lt;/a&gt; to follow along or use as a reference. I recommend forking and cloning so you have your own copy. There will be a branch for each part of this tutorial that will have the complete solution for that part. So if you switch to the 'components' branch, you will see all the code that this part of the tutorial will end with.
&lt;p&gt;

&lt;p&gt;
Now that you have the repository cloned onto your computer, navigate inside of the essential-react-tutorial directory and, in your terminal, and run this command:
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;$ npx create create-react-app .&lt;/code&gt;&amp;lt;
/p&amp;gt;

&lt;p&gt;
This command creates everything you need to quickly start using React, without it we'd have to cover a lot more material to setup. Using the Create React App project is ideal for learning React, so we can jump straight into coding. You can visit the &lt;a alt=&quot;create-react-app documentation&quot; target=&quot;_blank&quot; href=&quot;https://create-react-app.dev/&quot;&gt;docs for create-react-app&lt;/a&gt; to learn more about it.
&lt;/p&gt;

&lt;p&gt;
If you enter &lt;code&gt;$ ls&lt;/code&gt; in terminal, you should see this:
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/ls.png&quot; alt=&quot;screenshot of terminal after entering ls&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Everything is setup! We can now run &lt;code&gt;$ yarn start&lt;/code&gt; to start the server and start building our app!&lt;/p&gt;

&lt;p&gt;
In your browser, go to &lt;a alt=&quot;localhost 3000&quot; target=&quot;_blank&quot; href=&quot;http://localhost:3000&quot;&gt;localhost:3000&lt;/a&gt;. Keep the server running, your browser window will automatically refresh when you save changes in your code!
&lt;/p&gt;


&lt;br /&gt;
&lt;br /&gt;
&lt;h2&gt;Components&lt;/h2&gt;

&lt;p&gt;
The very first concept to understand react is getting familiar with components. What makes any library/framework worth using is following it's conventions to have DRY, maintainable code that will boost your productivity while developing your app. With React, parts of the UI (user interface) will be split into their own components to isolate how it handles data and functionality.
&lt;/p&gt;

&lt;p&gt; For example, the app we are going to be building will focus on content around parks, trails and reviews. At minimum, each one of those will have it's own component. They will have their own set of data, functionality and design. As we continue to develop, and as those components start getting more complex, it is very likely some parts inside those components will need to be split into new components. For example, with reviews we are going to want to display reviews and be able to submit a review with a form. Those are going to be two separate components.  
&lt;/p&gt;

&lt;p&gt;
Everything we need is in the /src directory. In app.js, we already have our first component. Notice that it is setup as a function, where it returns everything we want this component to render. The component is defined in this file, but having the code in this file is not what is making it show up in the browser. This is only defining the component.
&lt;/p&gt;

&lt;p&gt;
In index.js, notice line 4 &amp;amp; and 9 &lt;em&gt;(can reference in photo below)&lt;/em&gt;. Line 4 is importing the component from the app.js file. That gives us access to be able to render the component on line 9. Now, notice &lt;em&gt;how&lt;/em&gt; it is being rendered. Using an HTML-like syntax, it's able to be called with the name of the component in a self-closing tag. This syntax is known as &lt;b&gt;JSX&lt;/b&gt;.
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/app-index.png&quot; alt=&quot;screenshot of terminal after entering ls&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;
&lt;b&gt;JSX&lt;/b&gt; allows us to use HTML-like syntax, instead of complicated JS, to render elements from JavaScript. All the code, in app.js, between lines 6-23 is also JSX! While we are looking at app.js, change the text on line 19 to something else (I change it to 'Hello!'). If your server is still running, you should see the text change automatically when you visit &lt;a alt=&quot;localhost 3000&quot; target=&quot;_blank&quot; href=&quot;http://localhost:3000&quot;&gt;localhost:3000&lt;/a&gt;.
&lt;/p&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;h2&gt; Create new components &lt;/h2&gt;

&lt;p&gt;
It's time to get to business and start building out app! We will start by creating new components for park, trail and review.
&lt;/p&gt;

&lt;p&gt;
To keep our files more organized, start with making a /components directory inside of /src: &lt;code&gt;$ mkdir src/components&lt;/code&gt;.  Go ahead and create a file for each of the components, within the new components directory:
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;$ touch src/components/Park.js&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;$ touch src/components/Trail.js&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;$ touch src/components/Review.js&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
Open the new Park.js file you created. Based on what you saw with the App component, what is the minimum code needed to be able to import this component to another file to render? &lt;a alt=&quot;&quot; target=&quot;_blank&quot; href=&quot;https://gist.github.com/PilgrimMemoirs/01ce60bf85cede9a821109f61a6fc60b#file-01components-js&quot;&gt;Click here for the solution&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
We made the component, but now we have to explicitly call the function to tell it where to render. Let's go back to App.js, import Park.js at the top, and then use JSX to render the Park component. I suggest removing the code on lines 8-21, in App.js. &lt;a alt=&quot;&quot; target=&quot;_blank&quot; href=&quot;https://gist.github.com/PilgrimMemoirs/01ce60bf85cede9a821109f61a6fc60b#file-02components-js&quot;&gt;Click here for the solution&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt; Right now, your localhost:3000 should be showing 'I'm a park!', or whatever you returned from the Park component. Your code should look something like this:
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/app-park.png&quot; alt=&quot;screenshot of a app.js and park.js react component&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;
Note that when defining and calling a component, the component name has to be capitalized
&lt;/p&gt;

&lt;p&gt;
Use this same pattern to build the Trail and Review classes. They should look something like this:
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/new-components.png&quot; alt=&quot;screenshot of a app.js and park.js react component&quot; /&gt;
&lt;/figure&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;h2&gt;Load components within each other&lt;/h2&gt;
&lt;p&gt;
If we want to be able to see trails that belong to a park, it makes sense to load trails within parks. How would you do that? Try it out! &lt;a alt=&quot;&quot; target=&quot;_blank&quot; href=&quot;https://gist.github.com/PilgrimMemoirs/01ce60bf85cede9a821109f61a6fc60b#file-02components-js&quot;&gt;Refer to this solution&lt;/a&gt; if you get stuck.
&lt;/p&gt;

&lt;p&gt;
Now do the same, but with Park and Trail each having a Review component render with it. You might run into this &lt;b&gt;parsing error&lt;/b&gt;: &lt;code&gt;Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment &amp;lt;&amp;gt;...&amp;lt;/&amp;gt;?&lt;/code&gt;. When returning from a component, all elements must be wrapped in a single element (a div or section is commonly used).
&lt;/p&gt;

&lt;p&gt;
If it doesn't make sense to have a wrapping element, use &lt;b&gt;React.Fragment&lt;/b&gt; to wrap around the elements instead, when returning. Fragments won't be used in this tutorial, but they're good to know about. Look at &lt;a alt=&quot;React docs for fragment&quot; target=&quot;_blank&quot; href=&quot;https://reactjs.org/docs/fragments.html&quot;&gt;this page of the React docs&lt;/a&gt; to know when it's appropriate to use.
&lt;/p&gt;

&lt;p&gt;
In my solution, I used divs to wrap around multiple elements that are being returned. Notice how I added a class to the elements. Since 'class' is a reserved word in JavaScript, &lt;b&gt;'className'&lt;/b&gt; must be used instead. Remember, although it these look like HTML tags, everything in this file is still JavaScript and the everything that looks like HTML is actually JSX.
&lt;/p&gt;

&lt;p&gt;
This is a good spot to pause and make sure everything mentioned so far makes sense. Refer to &lt;a alt=&quot;final code solution&quot; target=&quot;_blank&quot; href=&quot;https://gist.github.com/PilgrimMemoirs/01ce60bf85cede9a821109f61a6fc60b#file-06components-js&quot;&gt;this solution&lt;/a&gt; and the image below for where your code should be at this point.
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/final-components.png&quot; alt=&quot;screenshot of final solution for components section of tutorial&quot; /&gt;
&lt;/figure&gt;

&lt;br /&gt;
&lt;br /&gt;
&lt;h2&gt;A note on functional vs class components&lt;/h2&gt;
&lt;p&gt;
This project is going to strictly use functional components. Before React Hooks were released in 2019, using ES6 classes were typically preferred for more complex components. Many code examples and code bases built before then will likely use class components. It's good to be aware of when searching for help online and when working in other code bases. This topic can lead you down an entire rabbit hole but, for now, just know that when a component starts with 'function' it's a functional component, and when it starts with 'class', it's a class component.
&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/react/functional-class.png&quot; alt=&quot;screenshot of a app.js and park.js react component&quot; /&gt;
    &lt;figcaption&gt; The same component, with the top as a function and the bottom as a class.&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;h3&gt;Next up...&lt;/h3&gt;
&lt;p&gt;The next section of this tutorial will cover handling data between components&lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2020 05:00:00 -0700</pubDate>
        <link>http://localhost:4000/react-components</link>
        <guid isPermaLink="true">http://localhost:4000/react-components</guid>
        
        <category>javascript</category>
        
        <category>web</category>
        
        <category>frontend</category>
        
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>May 1 TIL: Queue from Two Stacks &amp;&amp; SQL</title>
        <description>&lt;p&gt;&lt;em&gt; With stay-at-home orders having no end in sight, I decided to use this time to focus on all the things I've been putting off because of lacking time. In order to hold myself accountable, I'm using daily blogs to track what I learned that day, no matter how small or basic it might be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&quot;../images/selfies/IMG_2152.jpg&quot; alt=&quot;Me, sitting in front of the computer&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Udemy: The Coding Interview boot camp: &lt;br /&gt; Algorithms + Data Structures&lt;/h2&gt;
&lt;p&gt;Solidified &lt;b&gt;stacks and queues&lt;/b&gt; knowledge by solving the &lt;b&gt;'queue from stacks'&lt;/b&gt; problem. The problem has you building a queue class that has all the functionality of a queue, but is built on two stacks (instead of using a single array, like you typically would in JavaScript). It's wacky. It's the most impractical thing ever. But it's yet another problem to keep you on your toes, and (allegedly) it demonstrates that you know how both queues and stacks work. It's definitely fun to do just for the heck of it, but I'd legit be so confused if the first time I ever heard of this problem was in an interview.&lt;/p&gt;

&lt;p&gt; So, here it is! The code snippet below is assuming a stack class has already been created in another file and is being imported for use in this file. Instances of this Queue class will be able to call &lt;code&gt;.add(&quot;record&quot;)&lt;/code&gt; to add a new record to the rear, &lt;code&gt;.peek()&lt;/code&gt; to see what element is at the front, and &lt;code&gt;.pop()&lt;/code&gt; to return the element from the front. Note that 'front' and 'rear' are referring to the queue, not the two stacks this queue class is being built with.&lt;/p&gt;

&lt;p&gt;This is where it really gets confusing. Queues are first in, first out. Stacks are first in, last out. So, in order to have the methods that were mentioned above work, there is going to have to be a lot of moving around of the elements. See if you can wrap your brain around this doozy:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Queue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; See what I mean, it's wacky! And yes, you read it right, to remove or peek at an element, it has to move all elements in the first stack before it can access the element that is in front of the queue. Then, it has to move everything back to the first, so that it is ready for whatever next method is called on it. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Codecademy: SQL&lt;/h2&gt;
&lt;p&gt;BRB. Learning now!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 May 2020 05:00:00 -0700</pubDate>
        <link>http://localhost:4000/til-05012020</link>
        <guid isPermaLink="true">http://localhost:4000/til-05012020</guid>
        
        <category>CS</category>
        
        <category>course</category>
        
        <category>learning</category>
        
        <category>quarantine</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>TIL: April 30</title>
        <description>&lt;p&gt;&lt;em&gt; With stay-at-home orders having no end in sight, I decided to use this time to focus on all the things I've been putting off because of lacking time. In order to hold myself accountable, I'm using daily blogs to track what I learned that day, no matter how small or basic it might be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&quot;../images/selfies/IMG_2152.jpg&quot; alt=&quot;Me, sitting in front of the computer&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Udemy: The Coding Interview boot camp: Algorithms + Data Structures&lt;/h2&gt;
&lt;p&gt;Went back to the recursive solution for the fibonacci problem, cried at it's time complexity and then introduced memoization.&lt;/p&gt;
&lt;p&gt;The next section had me implement a queue in JavaScript, utilizing an array. Then, solved a problem weaving two queues together.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Leetcode: Practice &amp;amp; Explore&lt;/h2&gt;
&lt;p&gt;I checked out their explore/learn part of the site, starting with Queues. I like having both video and reading resources, and I like that this one has a nice structure for written material, with animations. I think it's going to pair well with the udemy course I'm watching.&lt;/p&gt;
&lt;p&gt;Did and quick'n'dirty (read: easy) problem with fining the length of the last word in a string. Knocked it out. On to the next! (read: medium &amp;amp; hard problems)&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Apr 2020 18:00:00 -0700</pubDate>
        <link>http://localhost:4000/til-04302020</link>
        <guid isPermaLink="true">http://localhost:4000/til-04302020</guid>
        
        <category>CS</category>
        
        <category>course</category>
        
        <category>learning</category>
        
        <category>quarantine</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>TIL: April 29</title>
        <description>&lt;p&gt;&lt;em&gt; With stay-at-home orders having no end in sight, I decided to use this time to focus on all the things I've been putting off because of lacking time. In order to hold myself accountable, I'm using daily blogs to track what I learned that day, no matter how small or basic it might be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&quot;../images/selfies/IMG_2152.jpg&quot; alt=&quot;Me, sitting in front of the computer&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Codecademy: Computer Science Path&lt;/h2&gt;
&lt;p&gt;This path is front-loaded with getting familiar with both programming basics and python syntax. It's going over very basic programming fundamentals is quite boring. The only reason I'm not skipping over these sections is because there is some Python specific material that is going to be helpful for the latter modules. For example, python methods can have multiple returns!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Youtube: Mock Interviews&lt;/h2&gt;
&lt;p&gt;Watched a couple of mock technical interviews. Focusing strictly on phone/online based ones since that'll all that will be happening for the foreseeable future! I'm liking the variety of videos that interviewing.io has on their Youtube page. They mainly have engineers from a lot of the big name companies solving problems with whatever language they prefer, so there's also a solid selection of the most common languages.  &lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2020 18:00:00 -0700</pubDate>
        <link>http://localhost:4000/til-04292020</link>
        <guid isPermaLink="true">http://localhost:4000/til-04292020</guid>
        
        <category>python</category>
        
        <category>CS</category>
        
        <category>course</category>
        
        <category>learning</category>
        
        <category>quarantine</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>TIL: April 28</title>
        <description>&lt;p&gt;&lt;em&gt; With stay-at-home orders having no end in sight, I decided to use this time to focus on all the things I've been putting off because of lacking time. In order to hold myself accountable, I'm using daily blogs to track what I learned that day, no matter how small or basic it might be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&quot;../images/selfies/IMG_2152.jpg&quot; alt=&quot;Me, sitting in front of the computer&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;LinkedIn Learning: React.js Essential Training&lt;/h2&gt;
&lt;p&gt;This was a course that covered a lot of material in a relatively short amount of time. It was the perfect course to quickly refresh and deepen my understanding on a few of the React essentials.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Udemy: Interview Bootcamp&lt;/h2&gt;
&lt;p&gt;Compared the iterative and recursive approaches to the fibonacci sequence problem.&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Apr 2020 18:00:00 -0700</pubDate>
        <link>http://localhost:4000/til-04282020</link>
        <guid isPermaLink="true">http://localhost:4000/til-04282020</guid>
        
        <category>react</category>
        
        <category>CS</category>
        
        <category>course</category>
        
        <category>learning</category>
        
        <category>quarantine</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>TIL: April 27</title>
        <description>&lt;p&gt;&lt;em&gt; With stay-at-home orders having no end in sight, I decided to use this time to focus on all the things I've been putting off because of lacking time. In order to hold myself accountable, I'm using daily blogs to track what I learned that day, no matter how small or basic it might be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&quot;../images/selfies/IMG_2152.jpg&quot; alt=&quot;Me, sitting in front of the computer&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt;Codecademy: Computer Science Path&lt;/h2&gt;
&lt;p&gt; Thanks to a very generous offer, I was granted access to a Codecademy Pro subscription for free. I only had 15 minutes to get started with selecting a course/path to take on the site and get started. The Computer Science Career Path uses python, so the first portion of this course was going over python syntax. Very straightforward, probably could have skipped since it only covered the very basics, which are very similar to ruby &lt;/p&gt;
</description>
        <pubDate>Sun, 26 Apr 2020 18:00:00 -0700</pubDate>
        <link>http://localhost:4000/til04272020</link>
        <guid isPermaLink="true">http://localhost:4000/til04272020</guid>
        
        <category>python</category>
        
        <category>CS</category>
        
        <category>course</category>
        
        <category>learning</category>
        
        <category>quarantine</category>
        
        
        <category>TIL</category>
        
      </item>
    
      <item>
        <title>Why aren’t my commits showing in my Github contribution grid?</title>
        <description>&lt;p&gt;&lt;em&gt;
There have been a few cases where I had been working on something, committed it, pushed it to master, and yet the ‘Contributions’ section on my Github profile wasn’t reflecting those commits. Even stranger, commits I made at work would show, but when I worked on personal projects at home, they would not show.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/github/github_contributions.png&quot; alt=&quot;My personal contributions grid on Github. With a few gaps I couldn't explain until now!&quot; /&gt;
  &lt;figcaption&gt; My personal contributions grid on Github. With a few gaps I couldn't explain, ...until now!  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt; The Solution: &lt;/h2&gt;

&lt;p&gt;
There’s a whole list of potential reasons, &lt;a href=&quot;https://help.github.com/en/github/setting-up-and-managing-your-github-profile/why-are-my-contributions-not-showing-up-on-my-profile&quot;&gt;detailed here&lt;/a&gt;, on what the issue could have been. The issue I was running into was that the email I had set on my local machine for git was different than the email I use for my Github account. Hence why commits I was making on my work computer (where I had configured with the correct email) were showing on the grid, but the commits I made on my personal computer at home (where I had an email different than the one I use for my Github configured locally) were not showing up.
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;
To change the email configured with your local git, enter the following command in your command line:
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git config --global user.email youremail@email.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
Make sure to use the same as the email you use for you Github account in place of 'youremail@email.com'.
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;That’s it!&lt;/p&gt;

&lt;p&gt;
Now your commits, that have made their way to the master branch, should be reflected on your contributions chart!  If not, you have another issue that’s likely documented in link I gave above, &lt;a href=&quot;https://help.github.com/en/github/setting-up-and-managing-your-github-profile/why-are-my-contributions-not-showing-up-on-my-profile&quot;&gt;here it is again&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Git committing!&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Feb 2020 17:00:00 -0800</pubDate>
        <link>http://localhost:4000/github-contributions</link>
        <guid isPermaLink="true">http://localhost:4000/github-contributions</guid>
        
        <category>Github</category>
        
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>Alpine Climbing: The First Summit</title>
        <description>&lt;p&gt;&lt;em&gt; For six precious summer days, I camped on Mt Baker for a mountaineering course that ended with a very successful summit. After living in Washington state for 2 years and doing the more strenuous day hikes, this summer seemed like the perfect time to start learning more technical skills in order to do more difficult approaches. &lt;/em&gt;&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/mtbaker-group.jpg&quot; alt=&quot;The group paying attention to an exercise with the summit of Baker in the background&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Mountains Are Calling &lt;/h2&gt;

&lt;p&gt;When I first moved to Seattle, I had no idea the city was surrounded by some of the best mountains and mountain ranges. I was first surprised with my first night in my new apartment in downtown, where I stood in awe on my balcony as I saw the sunset over the Olympic mountains in the distance. And that’s just the view of my apartment. Anywhere you go in Seattle there is some mountain&lt;/p&gt;

&lt;p&gt;Within my first year, I was starting to do day hikes every weekend. A friend was training for Rainier, and it seemed like the perfect excuse to get out of the city. And she wasn’t the only one on the trails training for Rainier, we were often met with plenty of other folks carrying way too large and heavy of packs for only a day hike.&lt;/p&gt;

&lt;p&gt;Summiting the local mountains like Rainier, Baker, St Helens, Hood, etc all seem like a right of passage for becoming a true Washingtonian. So I put down my growler and started training.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Day One: Base Camp &lt;/h2&gt;

&lt;p&gt;In January I had taken a few weeks off before starting a new job. I had just gotten my last check from the previous job, that included all my vacation cashed out. I did the only sensible thing and immediately started looking at ways to spend it. I booked a mountaineering course and immediately started climbing stairs and hitting the trails &lt;span class=&quot;italic&quot;&gt; (Kind of, I twisted my foot on a hooverboard mid-january and had to delay serious training until March. But we don't talk about that).&lt;/span&gt;&lt;/p&gt;

&lt;p&gt; When the week of finally approached I was having all the feelings of nervousness mixed with doubts on the amount of training I did. But after reviewing the itinerary, description and training, I knew I did everything I could (and more!) to prepare for this. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day1-snowfield.jpg&quot; alt=&quot;Stepping onto the first snowfield while hiking up to base camp on Mt Baker&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day1-guides.jpg&quot; alt=&quot;A scenic view with the two guides about to setup camp&quot; /&gt;
  &lt;figcaption&gt; Day one revolved around getting our gear ready, driving from Seattle to Mt Baker's Heliotrope Trailhead, and hiking up to basecamp. Here we are getting on to the first snowfield and scoping out where to setup our tents.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt; July 4th was the big day. Instead of spending the day drinking and eating a copious amount while waiting to watch fireworks, I woke up at 4:30AM. I packed all my gear, clothes, food, and supplies for 6-days as tightly as I could into my 85 liter pack. And at 5:15AM I was set to catch my Lyft to the office for gear check. &lt;/p&gt;

&lt;p&gt; For having bought all my own gear (which I'm very glad to be done with), I did pretty well with only having forgotten my locking caribeneers. Fortunately there were plenty of climbers on the trip to lend me the two I needed. After having unpacked for the check, we repacked and loaded the van for the 3 hr drive up to the Heliotrope trailhead on Mt. Baker. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/mtbaker-tent.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/mtbaker-meals.jpg&quot; alt=&quot;Group work&quot; /&gt;
  &lt;figcaption&gt; At the first snowfield, we evened out platforms in the snow and setup our &quot;spacious&quot; 2-person (you read that right) tents. Then we used the freshly melted glacial water to make all our meals. Because we fancy. &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt; Within three hours we hit the snowfield and started scouting out a spot to setup camp. We shoveled and stomped out a platform, setup our tents and made our first meals. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt; Day Two: Knots and Snow School &lt;/h2&gt;

&lt;p&gt; The first night I got just as much sleep as you'd expect. If you expected basically none, then you are correct. Fortunately day two was relatively laid back with learning about knots, rope handing and practicing moving in up a steep snowfield as a rope team.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day2-knots.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day2-ropes.jpg&quot; alt=&quot;Group work&quot; /&gt;
  &lt;figcaption&gt; Day two started out physically less demanding, with learning the essential knots and rope handling to be part of a mountaineering rope team.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt; Cliff notes: There are lots of useful knots. The alpine butterfly should actually be called an octopus knot, because it looks way more like a drunken octopus than a butterfly. Lead ropes are heavy, but like could totally save your life, so I guess they're worth it. Prussicks are the most simple, cheap part of alpine climbing, but yet insanely useful. Don't be a jerk who's pulling on the rope. Turns out, rock climbers have a huge advantage with this part of alpine climbing, who'd of thunk. Lastly, Imma going to be practicing these a lot more.&lt;/p&gt;

&lt;p&gt; After knot tying, rope handling and stomping around a bit in the snow, we practiced arresting. This is the most basic and essential part of mountaineering that even people who do guided climbs are taught. Basically, the whole point of a rope team is to catch and rescue someone if they fall. That fall could be down a steep, slippery part of the mountain or it could be a crevasse. Either way, falling sucks. Don't do it. But like, know what to do if it happens.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day2-selfarrest2.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day2-selfarrest.jpg&quot; alt=&quot;Group work&quot; /&gt;
  &lt;figcaption&gt;Snow school entailed learning how to tromp around in snow, as a team, wearing crampons, and not falling. But(!), in the event of falling we also learned how to self arrest with the ice axes.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; Arresting is really the simple most thing you have to do to stop a fall. Wether that's for yourself or a clumsy rope-mate. You fall, you stop yourself with an ice axe in a way that isn't going to pierce an organ, then you kick furiously until you can put your weight on the steps you kicked in. Done.&lt;/p&gt;

&lt;p&gt; While there was a lot of content this day, it was all building up to crevasse rescues, which we covered on day four. But(!), day three held much more exciting plans before getting to that!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt; Day Three: Ice Climbing &lt;/h2&gt;
&lt;p&gt; Here it is folks, other than summit day, this was the most exciting. There is something about climbing up ice on relatively short ends of sharp objects that really is next-level badassery. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day3-glacier.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt;Crossing over from the trail to the Coleman ice glacier to practice ice climbing.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; We hiked over to the Coleman Glacier and set ourselves up with our harnesses, crampons ice tools aaaand that's about it. The guides setup the top ropes so we could practice both climbing and belaying. Turns out belaying was more exhausting than the actual climbing. Out of the six days, I think I was the most sore from that. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day3-iceclimb4.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day3-iceclimb6.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt; This was a day for all the sharps (crampons &amp;amp; ice tools). Balancing all your weight on the short tips of the sharps definitely is an art, but not as difficult to begin as I would have expected. &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; Climbing turned out to not be all that difficult to get started with. I kinda loved it! Rappelling down was actually more scary than going up. For me at least, as a non climber. While I don't care for rock climbing, I kinda want to pick it up just to get use to the height, rappelling and belaying. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt; Day Four: Crevasse Rescue &lt;/h2&gt;
&lt;p&gt; Between the climbing and hiking to the glacier, day three ended up being pretty phyically demanding. Which meant day four was a little more relaxed in that sense. However, it was more demanding content-wise with trying to cover all the bases of crevasse rescue.  &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day4-break.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day4-crevasserescue.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt; An information heavy day, where the first bit was watching and trying to absorb as much of it as possible. The second half putting it all together during simulated crevasse falls.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; There were some baby crevasses not too far from camp that we hiked up to and spent most of the day at. The first couple of hours was sitting and watching a demo on setting up the anchors and rope system to rescue someone from a crevasse. Which is hella complicated. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day4-crevasserescue6.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt;My turn in the crevasse. Not too far from camp we found some safe, baby crevasses to hang out in while our trusted team 'saved' us.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; After getting to see the demo all of one time, we got to practice it once. Which basically meant, for most of us, having one of the guides walk us through most of it. Do I feel confident leading a rescue after doing the setup once. Nope. Not at all. &lt;/p&gt;

&lt;p&gt; Each person had to go through each of the three roles - the person &quot;falling&quot; into the crevasse, the person arresting the fall and the lead, who has the responsibility of setting up the anchor and rope system. Each round of rescues took roughly 45 minutes minimum, meaning it was a long day of rescuing with a small fraction of the most important parts actually being retainable. Can you tell I wasn't the most impressed with this day? &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day4-rappel.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt;The day wasn't done after falling into crevasses. We wrapped up day four with learning simple ways of rappelling and ascending on a rope.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; After rescuing, we did some more half-assed learning of self-rescue ascending with the use of those nifty prussicks we made on day two. And that's about it. Cool stuff, important stuff but a lot of content with little practice. So uh, anyone want to head to park/snowfield and practice setting up rope system?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt; Day Five: Summit Bid &lt;/h2&gt;
&lt;p&gt; The. Big. Day. It finally arrived, we were climbing the rest of the mountain that lured over us everyday while we sat and ate our meals at camp. The morning of we woke up around 4-4:30AM to be ready to start climbing at 5. As we made our way out of the tents we were greeted with the most gorgeous, clear sunrise where the crescent moon hung over summit.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitmorning.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitstart.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt;Summit Day! The morning started early, but with gorgeous views of the sun rising and the cresent moon over the top of Baker. &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; The morning started off with a slow and steady pace, as you are meant to do with long-climbing days. Every hour or so we'd take a quick 10 minute break. And I mean quick, the breaks would pass so quickly as that was the only opportunity to make any adjustments with clothing, eat something, drink water, re-apply sunscreen, and try to fit in sometime to relax and enjoy the view.  &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitclimb.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitclimb2.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt; Summit day was a total of 9 hrs on our feet, with 6 of those going up. Typically there were 10 minute breaks in between each 1-2 hrs of climbing. &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; Going up is basically kicking in steps, or finding a steady rhythm while stepping up in established steps. It's also being aware of what you just went though, and what other people in your team are about to go through. Like, if just went over an difficult part, the person after you still has to go through it, so don't speed up. K? &lt;/p&gt;

&lt;p&gt; Turns out there's a lot of trust and intuition that's required to be part of a rope team. Being mindful of stepping and pace is so crucial to keep proper spacing between other members (rope should be fully extended but not tight, *the more you know*). Aaaand, sometimes when you get that person who's just off in their own world, it's well, cool. Just cool. Moral: Don't climb with strangers, make mountaineering friends! &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitme.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitgroup.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt; The gang made it! There's nothing like summiting to see the dozens of other mountains you plan on climbing. &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; After around 4-5 legs of climbing, we made it to the top! And hooooly smokes was it stunning! We had THE most perfect day, with amazing visibility of all the surrounding mountains (think Rainier, Glacier Peak, Hood, Adams, etc.), the San Juan Island, the sound and really just EVERYTHING (or so if felt like) in the PNW. Five Star. Totally recommend. &lt;/p&gt;

&lt;p&gt; The group ran around the top-most part, which was roughly 15-20ft squared (maybe? that's a total guess but seems right? don't @ me, or do if you know the actual surface area), and tried to guess all the most prominent peaks before going into photo-shoot mode. I mean, my homegirl (and only other woman on the trip) was doing full on yoga poses. It was impressive. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/day5-summitbeers.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt; My beer sherpa, Matt, greeting me back on base camp after summit. Not pictured: two growlers from Black Raven Brewery and 2 more Pacificos. &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt; The way back down was the way back down. Back by 3PM, total of a 10hr day. Not bad. Fast forward, Earlier in the course I found out I occasionally got phone service from Canada, so what initially started out as prank texts to the boy turned into suggesting that he drive up to Baker and hike up the trail to our camp and deliver beer after we summit. It was a Sunday, what else did he have to do? So he did it. And now he's a legend. &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt; Day Six: Pack up &lt;/h2&gt;

&lt;p&gt; We opted to wake up earlier to pack up and hike back down to the trailhead to ensure we had more time to hang out in Seattle. Again, hike down was a hike down. We packed all our gear back into the trailer and headed back into civilization. Cheers to us. &lt;/p&gt;

&lt;p&gt; Back in the city I meet up with the only other woman and exchanged griefs of being a female entering this sport while eating the most glorious cookies from Metropolitan Market. Five Star. Highly recommend. &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/first-summit/mtbaker-tentmountain.jpg&quot; alt=&quot;alt text&quot; /&gt;
  &lt;figcaption&gt; Our home for the six days, with the summit of Baker always captivating us. &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2&gt; Back IRL &lt;/h2&gt;
&lt;p&gt; Looking back, it was truly a great experience and I'm SO stoked to climb more. My list of mountains to summit is getting ridiculously long. But my big takeaway, from a guided trip like this, is to get a solid group of my own climbing friends and practice with them. Especially since I'm so fortunate to be surrounded by some of the best mountain ranges! &lt;/p&gt;

&lt;p&gt;Doing the guided trip/course was nice, as a way to get into it. But I realized, as I was talking about taking this trip, I'm surrounded by SO many other people who are experience or are interested in mountaineering. I wasn't particularly impressed with the guides of this trip, hence why I haven't mentioned the guide company (they ended up giving me a full refund, but not going to get into that here). Mountaineering is definitely a challenge, but it's full of experiences totally worth having with the right people. But that's like most things in life, eh?&lt;/p&gt;

&lt;p&gt; I was so lucky to have another woman on the trip who *totally* got the frustrations I had with this trip. Spoiler alert, we're totally staying in touch and planning all sorts of adventures. &lt;/p&gt;

&lt;p&gt; This was a wild ride of an experience, and I can't wait to conquer more mountians! &lt;/p&gt;
</description>
        <pubDate>Wed, 11 Jul 2018 22:25:00 -0700</pubDate>
        <link>http://localhost:4000/mountaineering-course</link>
        <guid isPermaLink="true">http://localhost:4000/mountaineering-course</guid>
        
        <category>Baker</category>
        
        <category>Alpine</category>
        
        <category>Climbing</category>
        
        <category>Mountain</category>
        
        <category>Hike</category>
        
        <category>Camp</category>
        
        
        <category>Mountaineering</category>
        
      </item>
    
      <item>
        <title>Fourth Flatiron Class: Advanced SE</title>
        <description>&lt;p&gt;&lt;em&gt; After eight weeks of teaching and getting to know some incredible kids, I have ended my summer teaching fellowship with Flatiron School with my final class, Advanced Software Engineering. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Getting Advanced &lt;/h2&gt;

&lt;p&gt; These seasoned Flatiron students came back for more, kicking up what they learned in SE 1 by putting databases and user sessions into their Sinatra apps. This class had a healthy mix of students from three different intro classes, two even coming from a class at the Flatiron HQ in New York.  &lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0073.jpg&quot; alt=&quot;Flatiron Precollege Program Advanced Class&quot; /&gt;

  &lt;img src=&quot;../images/flatiron/class_4/DSC_0088.jpg&quot; alt=&quot;Group work&quot; /&gt;
  &lt;figcaption&gt; The advanced class revolved heavily around group projects.  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Upping the Game &lt;/h2&gt;

&lt;p&gt;The Ninja. The Table Tennis. The Stickers. The Code. &lt;br /&gt;
All the above and then some were taken to a whole new level with this class. Lets just say, it got vicious. Not gonna lie, databases make you live dangerously. &lt;/p&gt;

&lt;p&gt;  Sometimes, it got so dangerous, breaks to watch old reruns of Supermarket Sweep became necessary. Candied hams and  mother and daughters special for the win.  &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0082.jpg&quot; alt=&quot;Demo of student's business site&quot; /&gt;
&lt;img src=&quot;../images/flatiron/class_4/DSC_0107.jpg&quot; alt=&quot;Final Ping Pong Tournament&quot; /&gt;
  &lt;figcaption&gt; One 17 year old student was showing off the website of their business &amp;amp; Daily lunch time ping pong matches.  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Hanging with the Big Devs &lt;/h2&gt;

&lt;p&gt; On our final day I was fortunate enough to arrange a class field trip down to Braintree's Chicago HQ.  One of the many perks of holding class in the Merchandise Mart is being surrounded by all sorts of legit tech companies, another one may be having Doughnut Vault across the street. &lt;/p&gt;

&lt;p&gt;During our tour of the Braintree’s HQ, we were teased with sights of all the free food, hanging out in their treehouse, devs working in giant bean bags and, best yet, their game room. &lt;/p&gt;

&lt;p&gt;In the end, our tour guide (who’s normal day job is working as a tech recruiter) came out and surprised us all with swag on swag. We’re talking stickers, pens, notebooks and t-shirts. Ryan hooked us up!  &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0136.jpg&quot; alt=&quot;Braintree Tour inside the treehouse&quot; /&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0148.jpg&quot; alt=&quot;Braintree tour Q and A with a tech recruiter&quot; /&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0143.jpg&quot; alt=&quot;Group photo inside the Braintree offices in Chicago&quot; /&gt;
  &lt;figcaption&gt; A last day treat of getting to tour the Braintree head office. &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; The Final Finals &lt;/h2&gt;

&lt;p&gt;As usual, the final days were spent in utter chaos, planning, learning new technologies and BUILDING AN ENTIRE APP FROM SCRATCH IN THREE DAYS! Insanity!   &lt;/p&gt;
&lt;p&gt;But these kids not only pulled through, they took on major challenges and learned SO much. I couldn’t be more proud of the challenges they undertook and worked with. I don’t know if they realize how much they know  &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0158.jpg&quot; alt=&quot;Final Project showing code&quot; /&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0165.jpg&quot; alt=&quot;Final Project demo of app&quot; /&gt;
  &lt;figcaption&gt; The final final presentations of the summer.  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2&gt; Learned. Loved. Coded. &lt;/h2&gt;

&lt;p&gt; This summer, I feel like I learned just as much as these kids did. I had never been great with explaining my code or how ‘things’ worked, but this summer reaaaally stretched me to do so.  It has been an invaluable experience with instilling syntax, concepts and various technologies with myself. &lt;/p&gt;

&lt;p&gt; While I was absolutely stretched outside of my comfort zone, I loved every minute of it. I can’t remember a time I worked this hard or this many hours and had no complaints. It was never easy, but knowing I was making an impact on 30+ kids lives was exceptionally rewarding.   &lt;/p&gt;

&lt;p&gt; And guess what!? I even got some time to code! Crazy!  I know Sinatra like the back of my hand and a few wacky looking codepens saved in my account, but I’ll admit, I had way too much fun making projects to demo. #Meowspace4Lyfe &lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0122.jpg&quot; alt=&quot;Serious Group Photo&quot; /&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0125.jpg&quot; alt=&quot;Silly Group Photo&quot; /&gt;
  &lt;img src=&quot;../images/flatiron/class_4/DSC_0126.jpg&quot; alt=&quot;Silly Group Photo&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt; It is surreal sitting here on my couch at home, on a Monday, when I would normally be welcoming a new class. Instead, I am sending my resume and working on code challenges. &lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;
  
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;I'm not 100% sure what my next steps are, but I am making plans to keep teaching alongside developing.  &lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Aug 2015 22:25:00 -0700</pubDate>
        <link>http://localhost:4000/fourth-class</link>
        <guid isPermaLink="true">http://localhost:4000/fourth-class</guid>
        
        <category>Flatiron</category>
        
        <category>Teaching</category>
        
        <category>Culture</category>
        
        
        <category>Teaching</category>
        
      </item>
    
  </channel>
</rss>
