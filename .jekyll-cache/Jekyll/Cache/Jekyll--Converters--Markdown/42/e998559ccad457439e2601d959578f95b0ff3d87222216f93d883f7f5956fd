I"<p><em>This is the first post in a series touching on essential parts of React.js that should be known when getting started. We will cover components, handling data, component lifecycle, and using modern best practices to do so. </em></p>

<p><br /></p>

<figure>
  <img src="../images/react/component.png" alt="screenshot of a react component" />
</figure>
<p><br /><br /></p>

<h2> The Project </h2>
<p>We will be building the front-end for an app that lets users to view information about parks, and the trails inside each park. Users can also leave reviews for parks and trails.</p>

<h2> Get Started </h2>
<p> Use this [GitHub repository](https://github.com/PilgrimMemoirs/essential-react-tutorial) to follow along or use as a reference. I recommend forking and cloning so you have your own copy.<p>

<p>Once you have the repository cloned, navigate inside of the essential-react-tutorial directoy, in your terminal, and run this command:</p>
<div class="center">
  <code>$ yarn create create-react-app .</code>
  <p><em>(this assumes you use Yarn as your package manager, if you use another (like npm) replace yarn with that package manager.)</em></p>
</div>



<h2>Components</h2>
<p></p>


<h3>Components</h3>
<p>If you're familiar with JavaScript, then functional components should feel fairly natural. </p>

```javascript
function Park({}){
  return (

    )
}
```

<h3>A Note on Functional vs Class Components</h3>
<p>This project is going to strictly use functional components, but prior to something called React Hooks was released in 2019</p>
</p></p>
:ET