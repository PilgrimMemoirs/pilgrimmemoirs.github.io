I"<p><em>This is the first post in a series about essential React.js to know when getting started. Components will be function-based, using React Hooks, to cover how to handle props and state, component lifecyle and where to use ES6 features. Follow along with this GitHub repository, where each phase of the tutorial has it's own branch. </em></p>

<p><br /></p>

<!-- <figure>
  <img src="../images/selfies/IMG_2152.jpg" alt="Me, sitting in front of the computer">
</figure>
<br><br> -->

<h2> The Project </h2>
<p>This tutorial series will be building a React app for people to find trails within certain parks. Users will be able to view details on the parks and trails, as well as being able to review them.</p>

<h2>The Project's Components</h2>
<p></p>

<h3>Functional Components</h3>
<p>If you're familiar with JavaScript, then functional components should feel fairly natural. </p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">Park</span><span class="p">({}){</span>
  <span class="k">return</span> <span class="p">(</span>

    <span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<h3>A Note on Class Components</h3>
<p>While this project is only going to use functional components, it's important to be able to recognize class-based components and know the difference between them and functional components. It's especially important if you are working in a codebase that was developed before React Hooks launched in 2019, which is probably most.</p>

<p> If you're starting fresh with a new app, using functional components is generally recommended. The only reason not to tends to revolved around familiarity with class-based and having a preference for them. Since React Hooks are new, there's going to be less material and examples that use them, but they are not going anywhere so I wouldn't avoid using them for that reason! And, a component can always be refactored into a class component if necessary.</p>
:ET