I"\	<p><em>
This is the first post in a series touching on essential parts of React.js that should be known when getting started. We will cover components, handling data, component lifecycle, and using modern best practices to do so. Comfort with using terminal, Git, Github, HTML and JavaScript are recommended.
</em></p>

<p><br /></p>

<!-- <figure>
  <img src="../images/react/component.png" alt="screenshot of a react component">
</figure>
<br><br> -->

<h2> The Project </h2>
<p>
We will be building the front-end for an app that lets users view information about parks, and the trails inside each park. Users can also leave reviews for parks and trails.
</p>

<h2> Setup </h2>
<p>
Use this <a alt="Tutorial's github repository" href="https://github.com/PilgrimMemoirs/essential-react-tutorial">GitHub repository</a> to follow along or use as a reference. I recommend forking and cloning so you have your own copy. There will be a branch for each part of this tutorial that will have the complete solution for that part. So if you switch to the 'components' branch, you will see all the code that this part of the tutorial will end with.
<p>

<p>
Now that you have the repository cloned onto your computer, navigate inside of the essential-react-tutorial directory and, in your terminal, and run this command:
</p>

<code>$ yarn create create-react-app .</code>
<p><em>
Note: I use Yarn as my package manager, if you use another (like npm) replace yarn with that package manager's command. Also, the '$' indicates this is a terminal command, so don't copy that character when you see it at the start of code snippet.
</em></p>
<br />
<p>

</p>

<p>
Now, start the server!
</p>
<code>$ yarn start</code>
<p>
In your browser, go to localhost:3000. Keep this running so that your browser window will automatically refresh when you save changes in your code.
</p>


<h2>Components</h2>
<p></p>


<code>$ mkdir src/components</code><br />
<code>$ touch src/components/Park.js</code><br />
<code>$ touch src/components/Trail.js</code><br />
<code>$ touch src/components/Review.js</code>

<!-- <figure>
  <img src="../images/react/component.png" alt="screenshot of a react component">
</figure>
<br><br> -->

<h3>A Note on Functional vs Class Components</h3>
<p>
This project is going to strictly use functional components, but prior to something called React Hooks was released in 2019
</p>
</p></p>
:ET